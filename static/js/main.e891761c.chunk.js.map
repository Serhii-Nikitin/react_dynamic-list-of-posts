{"version":3,"sources":["api/api.js","components/PostsList/PostsList.jsx","api/posts.js","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","components/Header/Header.jsx","App.jsx","index.js"],"names":["request","url","options","fetch","then","response","json","result","data","PostsList","userPosts","setSelectedPostId","selectedPostId","setIsPostSelected","isPostSelected","setSelectedPost","handleButton","postId","console","log","getPostDetails","selectedPost","className","map","post","key","id","userId","title","type","onClick","NewCommentForm","useState","name","setName","email","setEmail","body","setBody","onSubmit","e","preventDefault","method","JSON","stringify","headers","placeholder","value","onChange","target","PostDetails","comments","setComments","isCommentShown","setIsCommentShown","useEffect","commentsFromServer","current","length","comment","commentId","Header","posts","setUserId","setUserPosts","getUserPosts","App","setPosts","postsFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e891761c.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport { getPostDetails } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  userPosts,\n  setSelectedPostId,\n  selectedPostId,\n  setIsPostSelected,\n  isPostSelected,\n  setSelectedPost,\n}) => {\n  const handleButton = (postId) => {\n    console.log(postId, selectedPostId);\n    if (postId !== selectedPostId) {\n      setIsPostSelected(true)\n      setSelectedPostId(postId)\n      getPostDetails(postId, { method: 'GET' })\n        .then(selectedPost => setSelectedPost(selectedPost))\n    } else {\n      setIsPostSelected(false)\n      setSelectedPostId(0)\n      setSelectedPost(null)\n    };\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {userPosts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>{`[User ${post.userId || 'not defined'}]: `}</b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleButton(post.id)}\n            >\n              {selectedPostId === post.id && isPostSelected\n                ? 'Close'\n                : 'Open'\n                }\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n};\n","import { request } from './api';\n\nexport const getPosts = () => request(`/posts`);\n\nexport const getUserPosts = userId => request(`/posts?userId=${userId}`);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { addComment } from '../../api/comments'\n// \"id\":1963,\"postId\":null,\"name\":null,\"email\":null,\"body\":null\nexport const NewCommentForm = ({ selectedPostId }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [body, setBody] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    addComment('/comments', {\n      method: 'POST',\n      body: JSON.stringify({\n        postId: selectedPostId,\n        name,\n        email,\n        body,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    setName('')\n    setEmail('')\n    setBody('')\n  }\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  )\n};\n","import { request } from './api';\n\nexport const getPostComments = postId => request(`/comments?postId=${postId}`);\n\nexport const removeComment = (commentId, options) => (\n  request(`/comments/${commentId}`, options)\n);\n\nexport const addComment = (url, options) => request(url, options);\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments, removeComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId, selectedPost }) => {\n  const [comments, setComments] = useState([]);\n  const [isCommentShown, setIsCommentShown] = useState(true)\n\n  useEffect(() => {\n    getPostComments(selectedPostId)\n      .then(commentsFromServer => setComments(commentsFromServer))\n\n    console.log('hi');\n  }, [selectedPostId])\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{`Title: ${selectedPost.title || 'This post hasn\\'t title'}`}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setIsCommentShown(current => !current)}\n        >\n          {`${isCommentShown ? 'Hide ' : 'Show '}${comments.length} comments`}\n        </button>\n\n        {isCommentShown && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    removeComment(comment.id, { method: 'DELETE' })\n                      .then(result => console.log(result))\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n          />\n        </div>\n      </section>\n    </div>\n  )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\n\nexport const Header = ({ posts, userId, setUserId, setUserPosts, setIsPostSelected }) => {\n  const handleSelect = (e) => {\n    if (e.target.value === '0') {\n      setUserId(0);\n      setUserPosts(posts);\n      setIsPostSelected(false)\n    } else {\n      setUserId(+e.target.value);\n      setIsPostSelected(false)\n      getUserPosts(e.target.value)\n        .then(userPosts => setUserPosts(userPosts));\n    }\n  };\n\n  return (\n    <header className=\"App__header\">\n      <label>\n        Select a user: &nbsp;\n\n        <select\n          className=\"App__user-selector\"\n          value={userId}\n          onChange={handleSelect}\n        >\n          <option value=\"0\">All users</option>\n          <option value=\"1\">Leanne Graham</option>\n          <option value=\"2\">Ervin Howell</option>\n          <option value=\"3\">Clementine Bauch</option>\n          <option value=\"4\">Patricia Lebsack</option>\n          <option value=\"5\">Chelsey Dietrich</option>\n          <option value=\"6\">Mrs. Dennis Schulist</option>\n          <option value=\"7\">Kurtis Weissnat</option>\n          <option value=\"8\">Nicholas Runolfsdottir V</option>\n          <option value=\"9\">Glenna Reichert</option>\n          <option value=\"10\">Leanne Graham</option>\n        </select>\n      </label>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      body: PropTypes.string,\n    }),\n  ).isRequired,\n  userId: PropTypes.number.isRequired,\n  setUserId: PropTypes.func.isRequired,\n  setUserPosts: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './api/posts';\nimport { Header } from './components/Header';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [isPostSelected, setIsPostSelected] = useState(false);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  useEffect(() => {\n    getPosts()\n      .then((postsFromServer) => {\n        console.log(postsFromServer);\n\n        setPosts(postsFromServer);\n        setUserPosts(postsFromServer);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header\n        posts={posts}\n        userId={userId}\n        setUserId={setUserId}\n        setUserPosts={setUserPosts}\n        setIsPostSelected={setIsPostSelected}\n      />\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            userPosts={userPosts}\n            isPostSelected={isPostSelected}\n            setIsPostSelected={setIsPostSelected}\n            setSelectedPost={setSelectedPost}\n            selectedPost={selectedPost}\n          />\n        </div>\n\n        {selectedPost && isPostSelected && (\n          <div className=\"App__content\">\n            <PostDetails \n              selectedPostId={selectedPostId}\n              selectedPost={selectedPost}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}